plugins {
    alias(libs.plugins.android.application)
}

android {
    namespace 'com.catsmoker.app'
    compileSdk = 36

    defaultConfig {
        applicationId "com.catsmoker.app"
        minSdk = 27
        targetSdk = 36
        versionCode 4
        versionName "1.6"

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        viewBinding true
        buildConfig true
        aidl true
    }

    lint {
        abortOnError true
        checkReleaseBuilds true
    }

    sourceSets {
        main {
            aidl.srcDirs 'src/main/aidl'
        }
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
}

dependencies {
    // AndroidX dependencies
    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraintlayout
    implementation libs.multidex
    implementation libs.activity
    implementation libs.fragment
    implementation libs.core
    implementation libs.annotation
    implementation libs.documentfile
    implementation libs.play.services.ads
    implementation libs.core.splashscreen
    implementation libs.libsu.core

    // Testing dependencies
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    // Third-party dependencies
    compileOnly libs.api  // Xposed framework API

    // Load all AARs from libs folder
    implementation files('libs/RootTools.aar')
    implementation files('libs/RootShell.aar')

    // Shizuku
    implementation libs.shizuku.api
    implementation libs.provider
}