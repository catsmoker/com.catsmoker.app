// Generated by view binder compiler. Do not edit!
package com.catsmoker.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.catsmoker.app.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRootLsposedBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnInstallLsposed;

  @NonNull
  public final Button btnRefresh;

  @NonNull
  public final MaterialCardView cardActions;

  @NonNull
  public final MaterialCardView cardStatus;

  @NonNull
  public final TextView instructions;

  @NonNull
  public final TextView lsposedHeaderTitle;

  @NonNull
  public final TextView status;

  private ActivityRootLsposedBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnInstallLsposed, @NonNull Button btnRefresh,
      @NonNull MaterialCardView cardActions, @NonNull MaterialCardView cardStatus,
      @NonNull TextView instructions, @NonNull TextView lsposedHeaderTitle,
      @NonNull TextView status) {
    this.rootView = rootView;
    this.btnInstallLsposed = btnInstallLsposed;
    this.btnRefresh = btnRefresh;
    this.cardActions = cardActions;
    this.cardStatus = cardStatus;
    this.instructions = instructions;
    this.lsposedHeaderTitle = lsposedHeaderTitle;
    this.status = status;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRootLsposedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRootLsposedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_root_lsposed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRootLsposedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_install_lsposed;
      Button btnInstallLsposed = ViewBindings.findChildViewById(rootView, id);
      if (btnInstallLsposed == null) {
        break missingId;
      }

      id = R.id.btn_refresh;
      Button btnRefresh = ViewBindings.findChildViewById(rootView, id);
      if (btnRefresh == null) {
        break missingId;
      }

      id = R.id.card_actions;
      MaterialCardView cardActions = ViewBindings.findChildViewById(rootView, id);
      if (cardActions == null) {
        break missingId;
      }

      id = R.id.card_status;
      MaterialCardView cardStatus = ViewBindings.findChildViewById(rootView, id);
      if (cardStatus == null) {
        break missingId;
      }

      id = R.id.instructions;
      TextView instructions = ViewBindings.findChildViewById(rootView, id);
      if (instructions == null) {
        break missingId;
      }

      id = R.id.lsposed_header_title;
      TextView lsposedHeaderTitle = ViewBindings.findChildViewById(rootView, id);
      if (lsposedHeaderTitle == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      return new ActivityRootLsposedBinding((LinearLayout) rootView, btnInstallLsposed, btnRefresh,
          cardActions, cardStatus, instructions, lsposedHeaderTitle, status);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
