// Generated by view binder compiler. Do not edit!
package com.catsmoker.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.catsmoker.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRootLsposedBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnInstallLsposed;

  @NonNull
  public final Button btnLaunchLsposed;

  @NonNull
  public final Button btnRefresh;

  @NonNull
  public final TextView gameStatus;

  @NonNull
  public final TextView instructions;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final TextView status;

  private ActivityRootLsposedBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnInstallLsposed, @NonNull Button btnLaunchLsposed,
      @NonNull Button btnRefresh, @NonNull TextView gameStatus, @NonNull TextView instructions,
      @NonNull ScrollView scrollView, @NonNull TextView status) {
    this.rootView = rootView;
    this.btnInstallLsposed = btnInstallLsposed;
    this.btnLaunchLsposed = btnLaunchLsposed;
    this.btnRefresh = btnRefresh;
    this.gameStatus = gameStatus;
    this.instructions = instructions;
    this.scrollView = scrollView;
    this.status = status;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRootLsposedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRootLsposedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_root_lsposed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRootLsposedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_install_lsposed;
      Button btnInstallLsposed = ViewBindings.findChildViewById(rootView, id);
      if (btnInstallLsposed == null) {
        break missingId;
      }

      id = R.id.btn_launch_lsposed;
      Button btnLaunchLsposed = ViewBindings.findChildViewById(rootView, id);
      if (btnLaunchLsposed == null) {
        break missingId;
      }

      id = R.id.btn_refresh;
      Button btnRefresh = ViewBindings.findChildViewById(rootView, id);
      if (btnRefresh == null) {
        break missingId;
      }

      id = R.id.game_status;
      TextView gameStatus = ViewBindings.findChildViewById(rootView, id);
      if (gameStatus == null) {
        break missingId;
      }

      id = R.id.instructions;
      TextView instructions = ViewBindings.findChildViewById(rootView, id);
      if (instructions == null) {
        break missingId;
      }

      id = R.id.scroll_view;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      return new ActivityRootLsposedBinding((ConstraintLayout) rootView, btnInstallLsposed,
          btnLaunchLsposed, btnRefresh, gameStatus, instructions, scrollView, status);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
