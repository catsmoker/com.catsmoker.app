# The proguard configuration file for the following section is C:\Users\User\StudioProjects\com.catsmoker.app\app\build\intermediates\aapt_proguard_file\release\processReleaseResources\aapt_rules.txt
-keep class androidx.core.app.CoreComponentFactory { <init>(); }
-keep class androidx.profileinstaller.ProfileInstallReceiver { <init>(); }
-keep class androidx.room.MultiInstanceInvalidationService { <init>(); }
-keep class androidx.startup.InitializationProvider { <init>(); }
-keep class androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy { <init>(); }
-keep class androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy { <init>(); }
-keep class androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy { <init>(); }
-keep class androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy { <init>(); }
-keep class androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver { <init>(); }
-keep class androidx.work.impl.background.systemalarm.RescheduleReceiver { <init>(); }
-keep class androidx.work.impl.background.systemalarm.SystemAlarmService { <init>(); }
-keep class androidx.work.impl.background.systemjob.SystemJobService { <init>(); }
-keep class androidx.work.impl.diagnostics.DiagnosticsReceiver { <init>(); }
-keep class androidx.work.impl.foreground.SystemForegroundService { <init>(); }
-keep class androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver { <init>(); }
-keep class com.catsmoker.app.AboutActivity { <init>(); }
-keep class com.catsmoker.app.CrosshairOverlayService { <init>(); }
-keep class com.catsmoker.app.FeaturesActivity { <init>(); }
-keep class com.catsmoker.app.MainActivity { <init>(); }
-keep class com.catsmoker.app.NonRootGuideActivity { <init>(); }
-keep class com.catsmoker.app.RootLSPosedActivity { <init>(); }
-keep class com.google.android.gms.ads.AdActivity { <init>(); }
-keep class com.google.android.gms.ads.AdService { <init>(); }
-keep class com.google.android.gms.ads.MobileAdsInitProvider { <init>(); }
-keep class com.google.android.gms.ads.NotificationHandlerActivity { <init>(); }
-keep class com.google.android.gms.ads.OutOfContextTestingActivity { <init>(); }
-keep class com.google.android.gms.common.api.GoogleApiActivity { <init>(); }
-keep class rikka.shizuku.ShizukuProvider { <init>(); }
-keep class android.widget.Space { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.app.AlertController$RecycleListView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ActionMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ExpandedMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ListMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContainer { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarOverlayLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActivityChooserView$InnerLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AlertDialogLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ButtonBarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ContentFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.DialogTitle { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsLinearLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.SearchView$SearchAutoComplete { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.Toolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ViewStubCompat { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.browser.browseractions.BrowserActionsFallbackMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.helper.widget.Flow { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.ConstraintLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.core.widget.NestedScrollView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.fragment.app.FragmentContainerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.recyclerview.widget.RecyclerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.gms.ads.AdView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.appbar.MaterialToolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.button.MaterialButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.button.MaterialButtonToggleGroup { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.card.MaterialCardView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.chip.Chip { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.datepicker.MaterialCalendarGridView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.divider.MaterialDivider { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.BaselineLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.CheckableImageButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.ClippableRoundedCornerLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.NavigationMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.NavigationMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.TouchObserverFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.snackbar.Snackbar$SnackbarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.snackbar.SnackbarContentLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textfield.TextInputEditText { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textfield.TextInputLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ChipTextInputComboView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ClockFaceView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ClockHandView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.TimePickerView { <init>(android.content.Context, android.util.AttributeSet); }


# End of content from C:\Users\User\StudioProjects\com.catsmoker.app\app\build\intermediates\aapt_proguard_file\release\processReleaseResources\aapt_rules.txt
# The proguard configuration file for the following section is C:\Users\User\StudioProjects\com.catsmoker.app\app\build\intermediates\default_proguard_files\global\proguard-android-optimize.txt-8.13.0
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
# will be ignored by new version of the Android plugin for Gradle.

# Optimizations: If you don't want to optimize, use the proguard-android.txt configuration file
# instead of this one, which turns off the optimization flags.
-allowaccessmodification

# Preserve some attributes that may be required for reflection.
-keepattributes AnnotationDefault,
                EnclosingMethod,
                InnerClasses,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations,
                Signature

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService
-keep public class com.google.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-dontnote com.google.vending.licensing.ILicensingService
-dontnote com.google.android.vending.licensing.ILicensingService

# For native methods, see https://www.guardsquare.com/manual/configuration/examples#native
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep setters in Views so that animations can still work.
-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick.
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# For enumeration classes, see https://www.guardsquare.com/manual/configuration/examples#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
    public static final ** CREATOR;
}

# Preserve annotated Javascript interface methods.
-keepclassmembers class * {
    @android.webkit.JavascriptInterface <methods>;
}

# The support libraries contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version. We know about them, and they are safe.
-dontnote android.support.**
-dontnote androidx.**
-dontwarn android.support.**
-dontwarn androidx.**

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
-dontnote org.apache.http.**
-dontnote android.net.http.**

# These classes are duplicated between android.jar and core-lambda-stubs.jar.
-dontnote java.lang.invoke.**

# End of content from C:\Users\User\StudioProjects\com.catsmoker.app\app\build\intermediates\default_proguard_files\global\proguard-android-optimize.txt-8.13.0
# The proguard configuration file for the following section is C:\Users\User\StudioProjects\com.catsmoker.app\app\proguard-rules.pro
# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile
# End of content from C:\Users\User\StudioProjects\com.catsmoker.app\app\proguard-rules.pro
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\29677b5ca57fea96e1c52c44f80966b5\transformed\material-1.13.0\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior
-keepattributes RuntimeVisible*Annotation*

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# AppCompatViewInflater reads the viewInflaterClass theme attribute which then
# reflectively instantiates MaterialComponentsViewInflater using the no-argument
# constructor. We only need to keep this constructor and the class name if
# AppCompatViewInflater is also being kept.
-if class androidx.appcompat.app.AppCompatViewInflater
-keep class com.google.android.material.theme.MaterialComponentsViewInflater {
    <init>();
}

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\29677b5ca57fea96e1c52c44f80966b5\transformed\material-1.13.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\7b7b4974e763d3d1840bab005337bf83\transformed\appcompat-1.7.1\proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\7b7b4974e763d3d1840bab005337bf83\transformed\appcompat-1.7.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\ebd5de63ad28779a70d6b12f5b000b6c\transformed\play-services-ads-24.7.0\proguard.txt
-keep public class com.google.android.gms.ads.internal.ClientApi {
  <init>();
}

# When built for Android API level < 30, Proguard warns that it can't find
# android.telephony.TelephonyDisplayInfo (since it was added only in API level
# 30). But, all its usages are guarded by runtime checks of the API level.
# Hence, it is safe to suppress Proguard's warnings.
-dontwarn android.telephony.TelephonyDisplayInfo

# When built for Android API level < 30, Proguard warns that it can't find
# android.view.Surface#setFrameRate(float, int) (since it was added only in API
# level 30). But, all its usages are guarded by runtime checks of the API level.
# Hence, it is safe to suppress Proguard's warnings.
-dontwarn android.view.Surface

# When built for Android API level < 31, Proguard warns that it can't find
# android.media.ApplicationMediaCapabilities (since it was added only in API
# level 31). But, all its usages are guarded by runtime checks of the API level.
# Hence, it is safe to suppress Proguard's warnings.
-dontwarn android.media.ApplicationMediaCapabilities

# When built for Android API level < 31, Proguard warns that it can't find
# android.media.MediaFeature (since it was added only in API level 31). But,
# all its usages are guarded by runtime checks of the API level.
# Hence, it is safe to suppress Proguard's warnings.
-dontwarn android.media.MediaFeature

# When built for Android API level < 31, Proguard warns that it can't find
# android.media.ApplicationMediaCapabilities$Builder (since it was added only in
# API level 31). But, all its usages are guarded by runtime checks of the API
# level. Hence, it is safe to suppress Proguard's warnings.
-dontwarn android.media.ApplicationMediaCapabilities$Builder

# When built for Android API level < 31, Proguard warns that it can't find
# android.media.MediaFeature$HdrType (since it was added only in API level 31).
# But, all its usages are guarded by runtime checks of the API level.
# Hence, it is safe to suppress Proguard's warnings.
-dontwarn android.media.MediaFeature$HdrType

# When built for Android API level < 32, Proguard warns that it can't find
# android.media.AudioAttributes$Builder (since it was added only in API level
# 32). But, all its usages are guarded by runtime checks of the API level.
# Hence, it is safe to suppress Proguard's warnings.
-dontwarn android.media.AudioAttributes$Builder

# When built for Android API level < 33, Proguard warns that it can't find
# android.adservices.measurement.MeasurementManager (since it was added only
# in API level 33). But, all its usages are guarded by runtime checks of the
# API level. Hence, it is safe to suppress Proguard's warnings.
-dontwarn android.adservices.measurement.MeasurementManager

# When built for Android API level < 33, Proguard warns that it can't find
# javax.lang.model.element.Modifier (since it was added only in API level 33).
# But, all its usages are guarded by runtime checks of the API level. Hence, it
# is safe to suppress Proguard's warnings.
-dontwarn javax.lang.model.element.Modifier

# Keep the androidx.webkit.ProfileStore interface. We reference some methods
# via reflection to work around a desugaring issue.
-keep interface androidx.webkit.ProfileStore {
  *;
}

-keep interface androidx.webkit.ProfileStore$-CC {
  *;
}

# These are checked at runtime for whether they exist, so it is fine if the API level doesn't include these.
-dontwarn android.content.pm.ApkChecksum
-dontwarn android.content.pm.PackageManager$OnChecksumsReadyListener
# Only for the requestChecksums method, but sadly -dontwarn can't take just a single method.
-dontwarn android.content.pm.PackageManager

# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.ads.zzhwo {
  <fields>;
}

# Auto-generated proguard rule(s) with obfuscated symbol
-dontwarn com.google.android.gms.ads.internal.util.zzx


# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\ebd5de63ad28779a70d6b12f5b000b6c\transformed\play-services-ads-24.7.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\74b25b1237b2afb78850c7dfb47e948e\transformed\play-services-ads-api-24.7.0\proguard.txt
# Keep implementations of the AdMob mediation adapter interfaces. Adapters for
# third party ad networks implement these interfaces and are invoked by the
# AdMob SDK via reflection.

-keep class * implements com.google.android.gms.ads.mediation.MediationAdapter {
  public *;
}
-keep class * implements com.google.ads.mediation.MediationAdapter {
  public *;
}
-keep class * implements com.google.android.gms.ads.mediation.customevent.CustomEvent {
  public *;
}
-keep class * implements com.google.ads.mediation.customevent.CustomEvent {
  public *;
}
-keep class * extends com.google.android.gms.ads.mediation.MediationAdNetworkAdapter {
  public *;
}
-keep class * extends com.google.android.gms.ads.mediation.Adapter {
  public *;
}

# Keep classes used for offline ads created by reflection. WorkManagerUtil is
# created reflectively by callers within GMSCore and OfflineNotificationPoster
# is created reflectively by WorkManager.
-keep class com.google.android.gms.ads.internal.util.WorkManagerUtil {
  public *;
}
-keep class com.google.android.gms.ads.internal.offline.buffering.OfflineNotificationPoster {
  public *;
}
-keep class com.google.android.gms.ads.internal.offline.buffering.OfflinePingSender {
  public *;
}

# Keeps the entry for full SDK to access via reflection.
-keep class com.google.android.gms.ads.internal.client.LiteSdkInfo {
  public *;
}

# Keeps the entry for first party plugins to access via reflection.
-keep class com.google.android.gms.ads.MobileAds {
  private void setPlugin(java.lang.String);
}

# Keep recordEvent API for Immersive SDK to access via reflection.
-keep class com.google.android.gms.ads.nativead.NativeAd {
  protected abstract void recordEvent(android.os.Bundle);
}

# Keep AdapterSettings class and its members.
-keep class com.google.android.gms.ads.internal.adaptersettings.AdapterSettings {
  *;
}

# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.ads.zzhwo {
  <fields>;
}

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\74b25b1237b2afb78850c7dfb47e948e\transformed\play-services-ads-api-24.7.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\2024a5eb801c8f2338a1815da532aab7\transformed\play-services-base-18.0.0\proguard.txt
# b/35135904 Ensure that proguard will not strip the mResultGuardian.
-keepclassmembers class com.google.android.gms.common.api.internal.BasePendingResult {
  com.google.android.gms.common.api.internal.BasePendingResult$ReleasableResultGuardian mResultGuardian;
}



# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\2024a5eb801c8f2338a1815da532aab7\transformed\play-services-base-18.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\0816c2d1753501a3114885fbfefcef58\transformed\play-services-tasks-18.2.0\proguard.txt


# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\0816c2d1753501a3114885fbfefcef58\transformed\play-services-tasks-18.2.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\450add2da84150ce58ec111661dd59af\transformed\play-services-measurement-sdk-api-20.1.2\proguard.txt
# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.measurement.zzkc {
  <fields>;
}

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\450add2da84150ce58ec111661dd59af\transformed\play-services-measurement-sdk-api-20.1.2\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\2beb4e125d5f726f127830c33cdfc41e\transformed\play-services-measurement-base-20.1.2\proguard.txt
# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.measurement.zzkc {
  <fields>;
}

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\2beb4e125d5f726f127830c33cdfc41e\transformed\play-services-measurement-base-20.1.2\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\7ac9508eeb772b23987eecef53a1181e\transformed\play-services-basement-18.4.0\proguard.txt
# Needed when building against pre-Marshmallow SDK.
-dontwarn android.security.NetworkSecurityPolicy

# Needed when building against Marshmallow SDK.
-dontwarn android.app.Notification

# Protobuf has references not on the Android boot classpath
-dontwarn sun.misc.Unsafe
-dontwarn libcore.io.Memory

# Annotations used during internal SDK shrinking.
-dontwarn com.google.android.apps.common.proguard.UsedBy*
-dontwarn com.google.android.apps.common.proguard.SideEffectFree

# Annotations referenced by the SDK but whose definitions are contained in
# non-required dependencies.
-dontwarn javax.annotation.**
-dontwarn org.checkerframework.**
-dontwarn com.google.errorprone.annotations.**
-dontwarn org.jspecify.nullness.NullMarked

# Annotations no longer exist. Suppression prevents ProGuard failures in
# SDKs which depend on earlier versions of play-services-basement.
-dontwarn com.google.android.gms.common.util.VisibleForTesting

# Proguard flags for consumers of the Google Play services SDK
# https://developers.google.com/android/guides/setup#add_google_play_services_to_your_project

# Keep SafeParcelable NULL value, needed for reflection by DowngradeableSafeParcel
-keepclassmembers public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {
    public static final *** NULL;
}

# Needed for Parcelable/SafeParcelable classes & their creators to not get renamed, as they are
# found via reflection.
-keep class com.google.android.gms.common.internal.ReflectedParcelable
-keepnames class * implements com.google.android.gms.common.internal.ReflectedParcelable
-keepclassmembers class * implements android.os.Parcelable {
  public static final *** CREATOR;
}

# Keep the classes/members we need for client functionality.
-keep @interface android.support.annotation.Keep
-keep @androidx.annotation.Keep class *
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <fields>;
}
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <methods>;
}

# Keep androidX equivalent of above android.support to allow Jetification.
-keep @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class *
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <fields>;
}
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <methods>;
}

# Keep the names of classes/members we need for client functionality.
-keep @interface com.google.android.gms.common.annotation.KeepName
-keepnames @com.google.android.gms.common.annotation.KeepName class *
-keepclassmembernames class * {
  @com.google.android.gms.common.annotation.KeepName *;
}

# Keep Dynamite API entry points
-keep @interface com.google.android.gms.common.util.DynamiteApi
-keep @com.google.android.gms.common.util.DynamiteApi public class * {
  public <fields>;
  public <methods>;
}



# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\7ac9508eeb772b23987eecef53a1181e\transformed\play-services-basement-18.4.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\501ed385d3c5685627be80db0a32fd85\transformed\fragment-1.8.9\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# FragmentTransition will reflectively lookup:
# androidx.transition.FragmentTransitionSupport
# We should ensure that we keep the constructor if the code using this is alive
-if class androidx.fragment.app.FragmentTransition {
   private static androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl();
}
-keep class androidx.transition.FragmentTransitionSupport {
    public <init>();
}

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\501ed385d3c5685627be80db0a32fd85\transformed\fragment-1.8.9\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\a48611dca3eb4c294cd9fbe58b553acf\transformed\activity-1.11.0\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\a48611dca3eb4c294cd9fbe58b553acf\transformed\activity-1.11.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\9bd8c7f31e3a0aec5b8950b9124edf65\transformed\documentfile-1.1.0\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\9bd8c7f31e3a0aec5b8950b9124edf65\transformed\documentfile-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\63b02fedd28bdb28ce912bbce2a72ab2\transformed\coordinatorlayout-1.1.0\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior and ViewPager's DecorView
-keepattributes *Annotation*

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\63b02fedd28bdb28ce912bbce2a72ab2\transformed\coordinatorlayout-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\c1571d8406e8fe77384e7d067ef1e237\transformed\transition-1.5.0\proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep a field in transition that is used to keep a reference to weakly-referenced object
-keepclassmembers class androidx.transition.ChangeBounds$* extends android.animation.AnimatorListenerAdapter {
  androidx.transition.ChangeBounds$ViewBounds mViewBounds;
}

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\c1571d8406e8fe77384e7d067ef1e237\transformed\transition-1.5.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\690b2e3bf4a838ab702abac04d1145c7\transformed\dynamicanimation-1.1.0\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\690b2e3bf4a838ab702abac04d1145c7\transformed\dynamicanimation-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\ece1e69d6473c84b7257e5f37da855cd\transformed\recyclerview-1.2.1\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# When layoutManager xml attribute is used, RecyclerView inflates
#LayoutManagers' constructors using reflection.
-keep public class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager {
    public <init>(android.content.Context, android.util.AttributeSet, int, int);
    public <init>();
}

-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
    public void suppressLayout(boolean);
    public boolean isLayoutSuppressed();
}
# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\ece1e69d6473c84b7257e5f37da855cd\transformed\recyclerview-1.2.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\24c28767ea21f6886dda861c187741ab\transformed\vectordrawable-animated-1.1.0\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\24c28767ea21f6886dda861c187741ab\transformed\vectordrawable-animated-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\bda3f91ff965f920836e5008314d553a\transformed\savedstate-1.2.1\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\bda3f91ff965f920836e5008314d553a\transformed\savedstate-1.2.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\7ac8760087c07feb2dbb178a7377cdd0\transformed\work-runtime-2.7.0\proguard.txt
-keep class * extends androidx.work.Worker
-keep class * extends androidx.work.InputMerger
# Keep all constructors on ListenableWorker, Worker (also marked with @Keep)
-keep public class * extends androidx.work.ListenableWorker {
    public <init>(...);
}
# We need to keep WorkerParameters for the ListenableWorker constructor
-keep class androidx.work.WorkerParameters

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\7ac8760087c07feb2dbb178a7377cdd0\transformed\work-runtime-2.7.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\04209b4b6825fa1e2e99dc061ded39c2\transformed\lifecycle-viewmodel-2.6.2\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\04209b4b6825fa1e2e99dc061ded39c2\transformed\lifecycle-viewmodel-2.6.2\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\6165daacf9aa063d0870d43759f69dab\transformed\lifecycle-process-2.6.2\proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\6165daacf9aa063d0870d43759f69dab\transformed\lifecycle-process-2.6.2\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\75b748a4753c086c363b8c91a7d0e274\transformed\lifecycle-runtime-2.6.2\proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep !interface * implements androidx.lifecycle.LifecycleObserver {
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }
# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\75b748a4753c086c363b8c91a7d0e274\transformed\lifecycle-runtime-2.6.2\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\f960186b9bc7f6b362303279e1d10908\transformed\lifecycle-viewmodel-savedstate-2.6.2\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\f960186b9bc7f6b362303279e1d10908\transformed\lifecycle-viewmodel-savedstate-2.6.2\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\17e5c44ec71b4f1d9577eb9d6aad54a6\transformed\core-ktx-1.17.0\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\17e5c44ec71b4f1d9577eb9d6aad54a6\transformed\core-ktx-1.17.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\55a21be16c6151ea9e6bb938000a31a1\transformed\webkit-1.12.1\proguard.txt
# Copyright 2018 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# We need to avoid obfuscating the support library boundary interface because
# this API is shared with the Android Support Library.
# Note that we only 'keep' the package org.chromium.support_lib_boundary itself,
# any sub-packages of that package can still be obfuscated.
-keep public class org.chromium.support_lib_boundary.* { public *; }

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Prevent WebViewClientCompat from being renamed, since chromium depends on this name.
-keepnames public class androidx.webkit.WebViewClientCompat

# Prevent ProcessGlobalConfig and member sProcessGlobalConfig from being renamed, since chromium
# depends on this name.
-keepnames public class androidx.webkit.ProcessGlobalConfig {
    private static final *** sProcessGlobalConfig;
}
# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\55a21be16c6151ea9e6bb938000a31a1\transformed\webkit-1.12.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\875b1f44beb77c06fb70500921297001\transformed\core-1.17.0\proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\875b1f44beb77c06fb70500921297001\transformed\core-1.17.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\6fd3c3e3d5c73dd047f9fbe92a31ff9a\transformed\provider-12.1.0\proguard.txt
-keepnames class moe.shizuku.api.BinderContainer
-keepclassmembers class moe.shizuku.api.BinderContainer {
   public static final android.os.Parcelable$Creator CREATOR;
}
# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\6fd3c3e3d5c73dd047f9fbe92a31ff9a\transformed\provider-12.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\147523526b350b178b9bee673f518cfd\transformed\api-12.1.0\proguard.txt

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\147523526b350b178b9bee673f518cfd\transformed\api-12.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\a12000b99ec7b6560328ddeaf58fe3dd\transformed\startup-runtime-1.1.1\proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\a12000b99ec7b6560328ddeaf58fe3dd\transformed\startup-runtime-1.1.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\742d062820c837d94509fd7d2d609256\transformed\versionedparcelable-1.1.1\proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\742d062820c837d94509fd7d2d609256\transformed\versionedparcelable-1.1.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\5a3695cd4623541a19cdb175c13a380c\transformed\shared-12.1.0\proguard.txt

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\5a3695cd4623541a19cdb175c13a380c\transformed\shared-12.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\1a1568bb00cafdd688af4dce13bab0df\transformed\room-runtime-2.2.5\proguard.txt
-keep class * extends androidx.room.RoomDatabase
-dontwarn androidx.room.paging.**

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\1a1568bb00cafdd688af4dce13bab0df\transformed\room-runtime-2.2.5\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\22028dbd5ff469cb9970d31a55bb8cd7\transformed\core-5.2.2\proguard.txt
# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile

# Strip out debugging stuffs
-assumenosideeffects class com.topjohnwu.superuser.internal.Utils {
	public static void log(...);
	public static void ex(...);
	public static boolean vLog() return false;
	public static boolean hasStartupAgents(android.content.Context) return false;
}
-assumenosideeffects class android.os.Debug {
	public static boolean isDebuggerConnected() return false;
}

# Make sure R8/Proguard don't break things
-keep,allowobfuscation class * extends com.topjohnwu.superuser.Shell$Initializer { *; }
-keep,allowobfuscation class * extends com.topjohnwu.superuser.ipc.RootService { *; }

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\22028dbd5ff469cb9970d31a55bb8cd7\transformed\core-5.2.2\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\2e72a4d784ba2faf9885fcc8db83ff96\transformed\core-viewtree-1.0.0\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\2e72a4d784ba2faf9885fcc8db83ff96\transformed\core-viewtree-1.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\33d65614a9565c5e7b912f81a993ce4f\transformed\shrink-rules\lib\META-INF\proguard\androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\33d65614a9565c5e7b912f81a993ce4f\transformed\shrink-rules\lib\META-INF\proguard\androidx-annotations.pro
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\2cb517d24a66f997be9503be3547e04f\transformed\shrink-rules\lib\META-INF\com.android.tools\r8-from-1.6.0\coroutines.pro
# Allow R8 to optimize away the FastServiceLoader.
# Together with ServiceLoader optimization in R8
# this results in direct instantiation when loading Dispatchers.Main
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED return false;
}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED return true;
}

# Disable support for "Missing Main Dispatcher", since we always have Android main dispatcher
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING return false;
}

# Statically turn off all debugging facilities and assertions
-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\2cb517d24a66f997be9503be3547e04f\transformed\shrink-rules\lib\META-INF\com.android.tools\r8-from-1.6.0\coroutines.pro
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\2f48870e40acc2c804677e1720f740d9\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\coroutines.pro
# When editing this file, update the following files as well:
# - META-INF/proguard/coroutines.pro
# - META-INF/com.android.tools/proguard/coroutines.pro

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# Only used in `kotlinx.coroutines.internal.ExceptionsConstructor`.
# The case when it is not available is hidden in a `try`-`catch`, as well as a check for Android.
-dontwarn java.lang.ClassValue

# An annotation used for build tooling, won't be directly accessed.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\2f48870e40acc2c804677e1720f740d9\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\coroutines.pro
# The proguard configuration file for the following section is C:\Users\User\.gradle\caches\8.14.3\transforms\a0763b302c845ec856bfc26430882645\transformed\aidl-12.1.0\proguard.txt

# End of content from C:\Users\User\.gradle\caches\8.14.3\transforms\a0763b302c845ec856bfc26430882645\transformed\aidl-12.1.0\proguard.txt
# The proguard configuration file for the following section is <unknown>

# End of content from <unknown>